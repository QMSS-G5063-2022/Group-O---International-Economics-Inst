edges_2<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .4) & network_$edges[,3]>quantile(network_$edges[,3], .2))
edges_3<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .6) & network_$edges[,3]>quantile(network_$edges[,3], .4))
edges_4<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .8) & network_$edges[,3]>quantile(network_$edges[,3], .6))
edges_5<-filter(network_$edges, network_$edges[,3]>quantile(network_$edges[,3], .8))
edges_1<-lapply(1:nrow(edges_1),function(i){
as(rbind(verts_[verts_$name==edges_1[i, "from"],],
verts_[verts_$name==edges_1[i, "to"],]),
"SpatialLines")
})
edges_2<-lapply(1:nrow(edges_2),function(i){
as(rbind(verts_[verts_$name==edges_2[i, "from"],],
verts_[verts_$name==edges_2[i, "to"],]),
"SpatialLines")
})
edges_3<-lapply(1:nrow(edges_3),function(i){
as(rbind(verts_[verts_$name==edges_3[i, "from"],],
verts_[verts_$name==edges_3[i, "to"],]),
"SpatialLines")
})
edges_4<-lapply(1:nrow(edges_4),function(i){
as(rbind(verts_[verts_$name==edges_4[i, "from"],],
verts_[verts_$name==edges_4[i, "to"],]),
"SpatialLines")
})
edges_5<-lapply(1:nrow(edges_5),function(i){
as(rbind(verts_[verts_$name==edges_5[i, "from"],],
verts_[verts_$name==edges_5[i, "to"],]),
"SpatialLines")
})
for(i in seq_along(edges)){
edges_1[[i]]<-spChFIDs(edges_1[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_2[[i]]<-spChFIDs(edges_2[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_3[[i]]<-spChFIDs(edges_3[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_4[[i]]<-spChFIDs(edges_4[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_5[[i]]<-spChFIDs(edges_5[[i]], as.character(i))
}
edges_1<-do.call(rbind, edges_1)
edges_2<-do.call(rbind, edges_2)
edges_3<-do.call(rbind, edges_3)
edges_4<-do.call(rbind, edges_4)
edges_5<-do.call(rbind, edges_5)
View(worldmap@data)
leaflet()%>%
addPolygons(data=worldmap, weight=.5) %>%
addCircles(data=verts_, fillColor = "red", color="red")
leaflet()%>%
addPolygons(data=worldmap, weight=.5) %>%
addCircles(data=verts_, fillColor = "red", color="red", radius=~inv_tot)
verts_@data
verts_<-network_$vertices
verts_<-left_join(verts_, h[c("TO","inv_tot")], by=c("name"="TO"))
View(verts_)
leaflet()%>%
addPolygons(data=worldmap, weight = .5)%>%
addCircles(data=verts_, radius=~inv_tot, fillColor = "red", color = "red")
leaflet()%>%
addPolygons(data=worldmap, weight = .5)%>%
->p
p<-leaflet()%>%
addPolygons(data=worldmap, weight = .5)
p
p+addCircles(data=verts_)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red")
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=15)
addCircles(data=verts_, color = "red", fillColor = "red", radius=100)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=100)
addCircles(data=verts_, color = "red", fillColor = "red", radius=10000)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=10000)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=1000000000)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=1000000)
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot)
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*100)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*100)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*10)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*10, weight=2)
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy3.R')
rawnodes<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_FREQ.csv')
rawedges<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_COOC.csv')
imf<-WDI(indicator = "DT.DOD.DIMF.CD", country="all",start=2005, extra=F)
imf<-filter(imf, !country %in% unique(imf$country)[1:49])
imf<-rename(imf, Year=year, name=country, IMF_cred=DT.DOD.DIMF.CD)
net_dat<-filter(imf, Year==min(imf$Year))[!duplicated(filter(imf, Year==min(imf$Year))$name), c("name","Year","IMF_cred")]
for(o in unique(imf$Year)[-1]){
net_dat<-rbind(net_dat, filter(imf, Year==o)[!duplicated(filter(imf, Year==o)$name), c("name", "Year", "IMF_cred")])
}
net_dat["Source"]<-rep("imf",nrow(net_dat))
net_dat<-net_dat[c(4,1,2,3)]
colnames(net_dat)[2]<-"Target"
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
net_dat$Target<-stringr::str_to_lower(net_dat$Target)
nodes<-rbind(nodes, c("imf", round(-77.04425201622206,6), round(38.89908346600995,6)))
nodes<-rbind(nodes, c("american samoa", round(-170.5794322853497,6), round(-14.26012915103479,6)))
nodes<-rbind(nodes, c("comoros", round(43.48504853332502,6),round(-11.862176383838756,6)))
nodes<-rbind(nodes,c("congo, rep.", round(16.052629791985225,6), round(-0.07691295959726356,6)))
nodes<-rbind(nodes,c("congo, dem. rep.", round(23.84214068136281,6), round(-3.2141630381290125,6)))
nodes<-rbind(nodes,c("cote d'ivoire", round(-5.529500409752393,6),round(7.253827157140813,6)))
nodes<-rbind(nodes,c("eswatini", round(31.526906430335316,6), round(-26.50532674658614, 6)))
nodes<-rbind(nodes,c("guinea-bissau", round(-15.11433094944025,6),round(11.849168222767416,6)))
nodes<-rbind(nodes, c("sao tome and principe", round(6.637044051405797,6), round(0.3877357338129725, 6)))
nodes<-rbind(nodes, c("st. lucia", round(-60.981555430152405,6), round(13.890030848573293,6)))
nodes<-rbind(nodes, c("st. vincent and the grenadines", round(-61.25999737205744,6), round(12.990774451382883,6)))
nodes<-rbind(nodes, c("timor-leste", round(126.04154797375384,6), round(-8.779762146492265,6)))
nodes<-rbind(nodes, c("st. kitts and nevis", round(-62.65150902029912, 6), round(17.2450959410363,6)))
nodes[nodes$name=="uk",]$name<-"united kingdom"
nodes[nodes$name=="uae",]$name<-"united arab emirates"
nodes[nodes$name=="brunei",]$name<-"brunei darussalam"
nodes[nodes$name=="macedonia",]$name<-"north macedonia"
nodes[nodes$name=="burma",]$name<-"myanmar"
nodes[nodes$name=="bahamas",]$name<-"bahamas, the"
nodes[nodes$name=="cape verde",]$name<-"cabo verde"
nodes[nodes$name=="egypt",]$name<-"egypt, arab rep."
nodes[nodes$name=="hong kong",]$name<-"hong kong sar, china"
nodes[nodes$name=="north korea",]$name<-"korea, dem. people's rep."
nodes[nodes$name=="south korea",]$name<-"korea, rep."
nodes[nodes$name=="kyrgyzstan",]$name<-"kyrgyz republic"
nodes[nodes$name=="laos",]$name<-"lao pdr"
nodes[nodes$name=="gambia",]$name<-"gambia, the"
nodes[nodes$name=="micronesia",]$name<-"micronesia, fed. sts."
nodes[nodes$name=="russia",]$name<-"russian federation"
nodes[nodes$name=="syria",]$name<-"syrian arab republic"
nodes[nodes$name=="venezuela",]$name<-"venezuela, rb"
nodes[nodes$name=="yemen",]$name<-"yemen, rep."
nodes[nodes$name=="usa",]$name<-"united states"
nodes[nodes$name=="iran",]$name<-"iran, islamic rep."
nodes[nodes$name=="slovakia",]$name<-"slovak republic"
nodes<-filter(nodes, name %in% c(filter(net_dat, Year==2015 & !is.na(IMF_cred))$Target,"imf"))
nodes$id<-as.integer(rownames(nodes))
nodes<-nodes[c(4,2,3,1)]
h<-dplyr::rename(filter(net_dat,Year==2015 & !is.na(IMF_cred))[c("Source", "Target", "IMF_cred")], FROM=Source, TO=Target)
u<-nodes[c("name", "lat","lon")]
u[u$name=="maldives",]$lat<-(4.222821)
u[u$name=="maldives",]$lon<-73.153334
network_<-get.data.frame(graph.data.frame(h, directed=T, vertices=u), "both")
verts_<-network_$vertices
View(verts_)
View(h)
setdiff(verts_$name, h$TO)
runApp('Mappy_Appy3.R')
leaflet()%>%
addPolygons(data=worldmap, weight=.5)->p
p
p %>%
addCircles(data=verts_)
typeof(verts_$lat)
verts_<-network_$vertices
verts_$lat<-as.numeric(verts_$lat)
verts_$lon<-as.numeric(verts_$lon)
verts_<-left_join(verts_, h["TO","IMF_cred"], by=c("name"="TO"))
View(verts_)
View(h)
verts_<-left_join(verts_, h[c("TO","IMF_cred")], by=c("name"="TO"))
View(verts_)
p %>%
addCircles(data=verts_)
addCircles(data=verts_, radius = ~IMF_cred)
p %>%
addCircles(data=verts_, radius = ~IMF_cred)
addCircles(data=verts_, radius = ~IMF_cred/100)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/100)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/100000)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/10000)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/100000)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/10000)
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
library(vdemdata)
dem<-filter(vdem[c("country_name","country_text_id","year","v2x_libdem")],year>2004)
dem[dem$country_text_id=="XKX",]$country_text_id<-"KOS"
dem[dem$country_text_id=="SSD",]$country_text_id<-"SDS"
dem[dem$country_text_id=="PSE",]$country_text_id<-"PSX"
dem[dem$country_text_id=="SML",]$country_text_id<-"SOL"
View(dem)
summary(dem$v2x_libdem)
runApp('Mappy_Appy3.R')
?addLegend
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
summary(dem$v2x_libdem)
dem$dem_fac<-ifelse(dem$v2x_libdem<.15, 1, 0)
View(dem)
quantile(dem$v2x_libdem, seq(0,1,.2))
dem$dem_fac<-ifelse(dem$v2x_libdem<.1, 1, ifelse(dem$v2x_libdem<.25 & dem$v2x_libdem>.1, 2, 0))
dem$dem_fac<-ifelse(dem$v2x_libdem<=.1, 1, ifelse(dem$v2x_libdem<=.25 & dem$v2x_libdem>.1, 2,
ifelse(dem$v2x_libdem<=.45 & dem$v2x_libdem>.25, 3,0)))
dem$dem_fac<-ifelse(dem$v2x_libdem<=.1, 1, ifelse(dem$v2x_libdem<=.25 & dem$v2x_libdem>.1, 2,
ifelse(dem$v2x_libdem<=.5 & dem$v2x_libdem>.25, 3,
ifelse(dem$v2x_libdem<=.7 & dem$v2x_libdem>.5, 4,
ifelse(dem$v2x_libdem<=.9 & dem$v2x_libdem>.7, 5, 0)))))
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
library(WDI)
WDIsearch("gini")
View(WDIsearch("gini"))
View(WDI(indicator="3.0.Gini", start=2005))
not<-c("3.0.Gini")
View(WDI(indicator = "3.0.Gini_nozero", start=2005))
not<-c("3.0.Gini")
alsonot<-function(x){
not<-c(not, x)
}
alsonot("3.0.Gini_nozero")
alsonot<-function(x){
not<-c(not, x)
not
}
getwd()
library(dplyr)
f<-file.choose()
RSF<-read.csv(f)
RSF<-rename(RSF, Underlying_situation_score = Score.A, Abuse_score = Sco.Exa)
RSF_small<-RSF[c('ISO','Rank2021', 'EN_country', 'Underlying_situation_score', 'Abuse_score', 'Score.2020')]
RSF_small$Underlying_situation_score<-as.numeric(sub(",", ".", RSF_small$Underlying_situation_score))
RSF_small$Abuse_score<-as.numeric(sub(",", ".", RSF_small$Abuse_score))
RSF_small$Underlying_situation_score<-as.numeric(sub(",", ".", RSF_small$Underlying_situation_score))
RSF_small$Score.2020<-as.numeric(sub(",", ".", RSF_small$Score.2020))
View(RSF)
View(RSF_small)
View(WDI(indicator = "SI.POV.GINI", start=2005))
gini<-WDI(indicator = "SI.POV.GINI", start=2005)
length(unique(gini$country))
unique(gini$country)[50]
gini<-filter(gini, !country %in% unique(gini$country)[1:49])
View(gini)
for(i in unique(gini$country)){
if(sum(is.na(filter(gini, country==i)$SI.POV.GINI))==nrow(filter(gini, country==i))){
gini<-filter(gini, country!=i)}}
length(unique(gini$country))
View(gini)
summary(gini$SI.POV.GINI)
gini$gini_fac<-ifelse(30>=gini$gini, 1, ifelse(gini$gini>30 & gini$gini<=35, 2,
ifelse(gini$gini>35 & gini$gini<=40, 3,
ifelse(gini$gini>40 & gini$gini<=50, 4,
ifelse(gini$gini>50, 5, 0)))))
gini<-WDI(country="all",indicator="SI.POV.GINI", start=2005, extra=F)
gini<-filter(gini, !country %in% unique(gini$country)[1:49])
gini<-rename(gini, Year=year, name=country, gini=`SI.POV.GINI`)
gini$gini_fac<-ifelse(30>=gini$gini, 1, ifelse(gini$gini>30 & gini$gini<=35, 2,
ifelse(gini$gini>35 & gini$gini<=40, 3,
ifelse(gini$gini>40 & gini$gini<=50, 4,
ifelse(gini$gini>50, 5, 0)))))
getwd()
library(shiny); runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
View(WDIsearch("poverty"))
View(WDI(indicator = "1.0.HCount.1.90usd", start=2005))
View(WDI(indicator = "1.0.HCount.2.50usd", start=2005))
View(WDI(indicator = "1.0.HCount.2.5usd", start=2005))
View(WDI(indicator = "1.0.HCount.Ofcl", start=2005))
View(WDI(indicator = "5.14.01.01.povsurv", start=2005))
View(WDI(indicator = "5.51.01.01.poverty", start=2005))
View(WDI(indicator = "IN.POV.HCR.EST.TOTL", start=2005))
View(WDI(indicator = "SI.POV.NAPR.ZS", start=2005))
View(WDI(indicator = "SI.POV.NSEV", start=2005))
View(WDI(indicator = "SI.POV.NSEV", start=2005))
View(WDIsearch("hunger"))
View(WDIsearch("starv"))
View(WDIsearch("poverty"))
View(WDIsearch("national poverty"))
View(WDI(indicator = "SI.POV.NAHC", start=2005))
pov<-WDI(indiactor="SI.POV.NAHC", start=2005)
pov<-WDI(indicator="SI.POV.NAHC", start=2005)
sum(is.na(pov$SI.POV.NAHC))
sum(!is.na(pov$SI.POV.NAHC))
unique(pov$country)[50]
pov<-filter(pov, !country %in% unique(pov$country)[1:49])
sum(!is.na(pov$SI.POV.NAHC))
sum(is.na(pov$SI.POV.NAHC))
rm(RSF, RSF_small)
rm(not, alsonot)
rm(f)
rm(i)
rm(gini)
View(pov)
pov<-dplyr::rename(pov, Year=year, poverty=`SI.POV.NAHC`)
for(i in unique(pov$country)){
if(sum(is.na(filter(pov, country==i))$poverty)==nrow(filter(pov, country==i))){
pov<-filter(pov, country!=i)
}
}
View(pov)
sum(is.na(filter(pov, country=="Afghanistan"))$poverty)
for(i in unique(pov$country)){
if(sum(is.na(filter(pov, country==i)$poverty))==nrow(filter(pov, country==i))){
pov<-filter(pov, country!=i)
}
}
rm(i)
View(pov)
View(WDIsearch("nutrition"))
View(WDIsearch("malnutrition"))
View(WDIsearch("undern"))
View(WDI(indicator = "SN.ITK.DEFC.ZS", start=2005))
n<-WDI(indicator = "SN.ITK.DEFC.ZS", start=2005)
unique(n$country)[50]
n<-filter(n, !country %in% unique(n$country)[1:49])
n<-rename(n, Year=year, undernourishment=`SN.ITK.DEFC.ZS`)
View(n)
for(i in unique(n$country)){
if(sum(is.na(filter(n, country==i)$undernourishment))==nrow(filter(n, country==i))){
n<-filter(n, country!=i)
}
}
rm(i)
View(n)
runApp('Mappy_Appy3.R')
library(readxl)
library(readr)
library(tidyverse)
library(ggplot2)
library(ggalt)
library(dplyr)
library(ggmap)
library(rgdal)
library(sp)
library(sf)
library(ggthemes)
library(leaflet)
library(geojsonio)
library(broom)
library(leafsync)
library(RColorBrewer)
library(DT)
library(magick)
library(knitr)
library(devtools)
library(plotly)
library(MetBrewer)
library(MetBrewer)
china<-read.csv('AidDatasGlobalChineseDevelopmentFinanceDataset_v2.0.csv')
china_military<-read.csv('MilitaryAidDatasGlobalChineseDevelopmentFinanceDataset_v2.0.csv')
china_invs<-read.csv('China-Global-Investment-Tracker-2021-Fall-FINAL-2022.2.21-update.up.csv')
tot_reg<-china_invs%>%
select(Region, Year, Quantity.in.Millions)%>%
group_by(Year, Region)%>%
mutate(Total=sum(as.numeric(gsub("[[:punct:]]", "", Quantity.in.Millions)))/100)
r<-ggplot(tot_reg, aes(x=Year, y=Total, color=Region))+
geom_line()+
geom_point()+
labs(x='Year', y='Aid in Billions ($)', title='Chinese Aid by Region, 2005-2021')+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = 'none'
)+
facet_wrap(vars(Region))+
scale_color_manual(values=met.brewer("Renoir", n=9, type='continuous'))
ggplotly(r)
sec<-china_invs%>%
select(Region, Sector, Year)%>%
group_by(Sector)%>%
summarize(frequency=n())
ggplot(sec, aes(x=Sector, y=frequency, fill=Sector))+
geom_bar(stat='identity')+
coord_flip()+
theme_bw()+
guides(fill=F)+
labs(title='Chinese Investment by Sector', y='Total Number of Projects', x='')+
scale_fill_manual(values=met.brewer("Renoir", n=14, type='continuous'))+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = 'none'
)
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(ggplot2)
library(vdemdata)
f<-vdem
f<-rename(f,Country=country_name)
f$year<-as.numeric(f$year)
f<-filter(f, year>1990)
chn_inv<-read.csv('China-Global-Investment-Tracker-2021-Fall-FINAL-2022.2.21-update.up.csv')
f$v2x_egaldem<-as.numeric(f$v2x_egaldem)
f<-f %>%
group_by(Country) %>%
mutate(dem_std = (v2x_egaldem-mean(v2x_egaldem, na.rm=T))/sd(v2x_egaldem))
chn_inv<-chn_inv %>%
group_by(Year, Country) %>%
mutate(inv_tot = sum(as.numeric(gsub("[[:punct:]]", "", Quantity.in.Millions))))
chn_inv[chn_inv$Country=="USA",]$Country<-"United States of America"
chn_inv[chn_inv$Country=="Russian Federation",]$Country<-"Russia"
chn_inv[chn_inv$Country=="Britain",]$Country<-"United Kingdom"
chn_inv[chn_inv$Country=="Trinidad-Tobago",]$Country<-"Trinidad and Tobago"
chn_inv[chn_inv$Country=="Congo",]$Country<-"Republic of the Congo"
chn_inv[chn_inv$Country=="UAE",]$Country<-"United Arab Emirates"
chn_inv[chn_inv$Country=="Sao Tome",]$Country<-"Sao Tome and Principe"
chn_inv[chn_inv$Country=="Bosnia",]$Country<-"Bosnia and Herzegovina"
chn_inv[chn_inv$Country=="Macedonia",]$Country<-"North Macedonia"
f[f$Country=="Burma/Myanmar",]$Country<-"Myanmar"
ggplot(inner_join(f, chn_inv,by="Country"), aes(x=log(inv_tot), y=dem_std))+
geom_point(alpha=.01)+
geom_smooth(method="lm")
chn_inv<-chn_inv %>%
group_by(Year) %>%
mutate(ann_tot = sum(inv_tot))
ggplot(chn_inv[!duplicated(chn_inv$Year),])+
geom_line(aes(x=Year,y=ann_tot))+
geom_vline(xintercept = 2016, linetype="dotted",alpha=.5, color="blue")+
theme_classic()
imf<-na_if(rename(read.csv('WB_Data/5351a96d-1d86-4c24-875e-52732e298e43_Data.csv'),name=ï..Country.Name, year=Time, IMF_cred=Use.of.IMF.credit..DOD..current.US....DT.DOD.DIMF.CD., Net_Flows_con=Net.financial.flows..IMF.concessional..NFL..current.US....DT.NFL.IMFC.CD., Net_Flows_non=Net.financial.flows..IMF.nonconcessional..NFL..current.US....DT.NFL.IMFN.CD., repurch_charg=IMF.repurchases.and.charges..TDS..current.US....DT.TDS.DIMF.CD.)[1:6727,c(1,3,5:8)], "..")
imf[imf$name=="Cote d'Ivoire",]$name<-"Ivory Coast"
imf[imf$name=="Congo, Rep.",]$name<-"Republic of Congo"
imf[imf$name=="Congo, Dem. Rep.",]$name<-"Democratic Republic of the Congo"
imf[imf$name=="Egypt, Arab Rep.",]$name<-"Egypt"
imf[imf$name=="Iran, Islamic Rep.",]$name<-"Iran"
imf[imf$name=="Korea, Rep.",]$name<-"South Korea"
imf[imf$name=="Korea, Dem. People's Rep.",]$name<-"North Korea"
imf[imf$name=="Kyrgyz Republic",]$name<-"Kyrgzstan"
imf[imf$name=="Lao PDR",]$name<-"Laos"
imf[imf$name=="Micronesia, Fed. Sts.",]$name<-"Micronesia"
imf[imf$name=="Syrian Arab Republic",]$name<-"Syria"
imf[imf$name=="Gambia, The",]$name<-"Gambia"
imf[imf$name=="Russian Federation",]$name<-"Russia"
imf[imf$name=="United States",]$name<-"USA"
imf[imf$name=="St. Lucia",]$name<-"Saint Lucia"
imf[imf$name=="Yemen, Rep.",]$name<-"Yemen"
imf[imf$name=="Bahamas, The",]$name<-"Bahamas"
imf[imf$name=="Brunei Darussalam",]$name<-"Brunei"
imf[imf$name=="Cabo Verde",]$name<-"Cape Verde"
imf[imf$name=="United Kingdom",]$name<-"UK"
imf[imf$name=="Venezuela, RB",]$name<-"Venezuela"
imf[imf$name=="Slovak Republic",]$name<-"Slovakia"
imf[imf$name=="Hong Kong SAR, China",]$name<-"Hong Kong"
imf[imf$name=="Bahamas",]$name<-"Bahamas"
imf<-imf %>%
group_by(year) %>%
mutate(ann_imf=sum(as.numeric(IMF_cred),na.rm=T))
ggplot(imf[!duplicated(imf$year),])+
geom_line(aes(x=year,y=ann_imf))+
geom_vline(xintercept=2016, linetype="dotted", color="blue", alpha=.5)
ggplot()+
geom_line(data=imf[!duplicated(imf$year),], aes(x=year,y=ann_imf/1000000), color="blue")+
geom_vline(xintercept=2016, linetype="dotted", alpha=.5)+
geom_line(data=chn_inv[!duplicated(chn_inv$Year),], aes(x=Year,y=ann_tot), color="red")+
theme_classic()
library(MetBrewer)
ggplot()+
geom_line(data=imf[!duplicated(imf$year),], aes(x=year,y=ann_imf/10000000000), color='blue')+
geom_vline(xintercept=2016, linetype="dotted", alpha=.5)+
geom_line(data=chn_inv[!duplicated(chn_inv$Year),], aes(x=Year,y=ann_tot/10000), color='red')+
labs(x='Year', y='Total Aid in Billions ($)', title='IMF vs. Chinese Aid')+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5)
)
c<-ggplot()+
geom_line(data=imf[!duplicated(imf$year),], aes(x=year,y=ann_imf/10000000000, lwd=1), color='dodgerblue4', size=2)+
labs(x='Year', y='Total Aid in Billions ($)', title='Total IMF Aid, 1990-2020')+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = 'none'
)
i<-ggplot()+
geom_line(data=chn_inv[!duplicated(chn_inv$Year),], aes(x=Year,y=ann_tot/10000), color='darkred', size=2)+
labs(x='Year', y='Total Aid in Billions ($)', title='Total Chinese Aid, 2005-2021')+
theme(
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5),
legend.position = 'none'
)
library(patchwork)
c+i
