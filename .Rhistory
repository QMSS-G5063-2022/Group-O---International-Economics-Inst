nodes<-rbind(nodes,c("cote d'ivoire", round(-5.529500409752393,6),round(7.253827157140813,6)))
nodes<-rbind(nodes,c("eswatini", round(31.526906430335316,6), round(-26.50532674658614, 6)))
nodes<-rbind(nodes,c("guinea-bissau", round(-15.11433094944025,6),round(11.849168222767416,6)))
nodes<-rbind(nodes, c("sao tome and principe", round(6.637044051405797,6), round(0.3877357338129725, 6)))
nodes<-rbind(nodes, c("st. lucia", round(-60.981555430152405,6), round(13.890030848573293,6)))
nodes<-rbind(nodes, c("st. vincent and the grenadines", round(-61.25999737205744,6), round(12.990774451382883,6)))
nodes<-rbind(nodes, c("timor-leste", round(126.04154797375384,6), round(-8.779762146492265,6)))
nodes[nodes$name=="uk",]$name<-"united kingdom"
nodes[nodes$name=="uae",]$name<-"united arab emirates"
nodes[nodes$name=="brunei",]$name<-"brunei darussalam"
nodes[nodes$name=="macedonia",]$name<-"north macedonia"
nodes[nodes$name=="burma",]$name<-"myanmar"
nodes[nodes$name=="bahamas",]$name<-"bahamas, the"
nodes[nodes$name=="cape verde",]$name<-"cabo verde"
nodes[nodes$name=="egypt",]$name<-"egypt, arab rep."
nodes[nodes$name=="hong kong",]$name<-"hong kong sar, china"
nodes[nodes$name=="north korea",]$name<-"korea, dem. people's rep."
nodes[nodes$name=="south korea",]$name<-"korea, rep."
nodes[nodes$name=="kyrgyzstan",]$name<-"kyrgyz republic"
nodes[nodes$name=="laos",]$name<-"lao pdr"
nodes[nodes$name=="gambia",]$name<-"gambia, the"
nodes[nodes$name=="micronesia",]$name<-"micronesia, fed. sts."
nodes[nodes$name=="russia",]$name<-"russian federation"
nodes[nodes$name=="syria",]$name<-"syrian arab republic"
nodes[nodes$name=="venezuela",]$name<-"venezuela, rb"
nodes[nodes$name=="yemen",]$name<-"yemen, rep."
nodes[nodes$name=="usa",]$name<-"united states"
nodes[nodes$name=="iran",]$name<-"iran, islamic rep."
nodes[nodes$name=="slovakia",]$name<-"slovak republic"
nodes<-filter(nodes, name %in% c(filter(net_dat, Year==2005 & !is.na(IMF_cred))$Target,"imf"))
nodes$id<-as.integer(rownames(nodes))
nodes<-nodes[c(4,2,3,1)]
h<-dplyr::rename(filter(net_dat,Year==2005 & !is.na(IMF_cred))[c("Source", "Target", "IMF_cred")], FROM=Source, TO=Target)
u<-nodes[c("name", "lat","lon")]
u[u$name=="maldives",]$lat<-(4.222821)
u[u$name=="maldives",]$lon<-73.153334
network_<-get.data.frame(graph.data.frame(h, directed=T, vertices=u), "both")
setdiff(nodes$name, h$TO)
setdiff(h$TO, u$name)
unique(nodes$name)[grep("kitts", unique(nodes$name))]
setdiff(net_dat$Target, nodes$name)
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
net_dat$Target<-stringr::str_to_lower(net_dat$Target)
nodes<-rbind(nodes, c("imf", round(-77.04425201622206,6), round(38.89908346600995,6)))
nodes<-rbind(nodes, c("american samoa", round(-170.5794322853497,6), round(-14.26012915103479,6)))
nodes<-rbind(nodes, c("comoros", round(43.48504853332502,6),round(-11.862176383838756,6)))
nodes<-rbind(nodes,c("congo, rep.", round(16.052629791985225,6), round(-0.07691295959726356,6)))
nodes<-rbind(nodes,c("congo, dem. rep.", round(23.84214068136281,6), round(-3.2141630381290125,6)))
nodes<-rbind(nodes,c("cote d'ivoire", round(-5.529500409752393,6),round(7.253827157140813,6)))
nodes<-rbind(nodes,c("eswatini", round(31.526906430335316,6), round(-26.50532674658614, 6)))
nodes<-rbind(nodes,c("guinea-bissau", round(-15.11433094944025,6),round(11.849168222767416,6)))
nodes<-rbind(nodes, c("sao tome and principe", round(6.637044051405797,6), round(0.3877357338129725, 6)))
nodes<-rbind(nodes, c("st. lucia", round(-60.981555430152405,6), round(13.890030848573293,6)))
nodes<-rbind(nodes, c("st. vincent and the grenadines", round(-61.25999737205744,6), round(12.990774451382883,6)))
nodes<-rbind(nodes, c("timor-leste", round(126.04154797375384,6), round(-8.779762146492265,6)))
nodes<-rbind(nodes, c("st. kitts and nevis", round(-62.65150902029912, 6), round(17.2450959410363,6)))
nodes[nodes$name=="uk",]$name<-"united kingdom"
nodes[nodes$name=="uae",]$name<-"united arab emirates"
nodes[nodes$name=="brunei",]$name<-"brunei darussalam"
nodes[nodes$name=="macedonia",]$name<-"north macedonia"
nodes[nodes$name=="burma",]$name<-"myanmar"
nodes[nodes$name=="bahamas",]$name<-"bahamas, the"
nodes[nodes$name=="cape verde",]$name<-"cabo verde"
nodes[nodes$name=="egypt",]$name<-"egypt, arab rep."
nodes[nodes$name=="hong kong",]$name<-"hong kong sar, china"
nodes[nodes$name=="north korea",]$name<-"korea, dem. people's rep."
nodes[nodes$name=="south korea",]$name<-"korea, rep."
nodes[nodes$name=="kyrgyzstan",]$name<-"kyrgyz republic"
nodes[nodes$name=="laos",]$name<-"lao pdr"
nodes[nodes$name=="gambia",]$name<-"gambia, the"
nodes[nodes$name=="micronesia",]$name<-"micronesia, fed. sts."
nodes[nodes$name=="russia",]$name<-"russian federation"
nodes[nodes$name=="syria",]$name<-"syrian arab republic"
nodes[nodes$name=="venezuela",]$name<-"venezuela, rb"
nodes[nodes$name=="yemen",]$name<-"yemen, rep."
nodes[nodes$name=="usa",]$name<-"united states"
nodes[nodes$name=="iran",]$name<-"iran, islamic rep."
nodes[nodes$name=="slovakia",]$name<-"slovak republic"
setdiff(net_dat$Target, nodes$name)
unique(imf$name)[grep("muda", unique(imf$name))]
sum(!is.na(filter(imf, name=="Bermuda")$IMF_cred))
unique(imf$name)[grep("irgin", unique(imf$name))]
sum(!is.na(filter(imf, name=="British Virgin Islands")$IMF_cred))
sum(!is.na(filter(imf, name=="Virgin Islands (U.S.)")$IMF_cred))
unique(imf$name)[grep("ayman", unique(imf$name))]
sum(!is.na(filter(imf, name=="Cayman Islands")$IMF_cred))
setdiff(net_dat$Target, nodes$name)
unique(imf$name)[grep("hannel", unique(imf$name))]
sum(!is.na(filter(imf, name=="Channel Islands")$IMF_cred))
sum(!is.na(filter(imf, name=="Faroe Islands")$IMF_cred))
unique(imf$name)[grep("uam", unique(imf$name))]
sum(!is.na(filter(imf, name=="Guam")$IMF_cred))
setdiff(net_dat$Target, nodes$name)
unique(imf$name)[grep("ibral", unique(imf$name))]
sum(!is.na(filter(imf, name=="Gibralter")$IMF_cred))
sum(!is.na(filter(imf, name=="Greenland")$IMF_cred))
sum(!is.na(filter(imf, name=="Macao")$IMF_cred))
unique(imf$name)[grep("urks", unique(imf$name))]
sum(!is.na(filter(imf, name=="Turks and Caicos Islands")$IMF_cred))
runApp('Mappy_Appy2.R')
?checkboxInput
?radioButtons
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
worldmap = readOGR(dsn="Nat_world_map", layer="ne_50m_admin_0_countries")
worldmap@data[worldmap@data$NAME=="United States of America",]$NAME<-"United States"
worldmap@data[worldmap@data$NAME=="Congo",]$NAME<-"Rep. of Congo"
worldmap@data[worldmap@data$NAME=="South Korea",]$NAME<-"Korea"
worldmap@data[worldmap@data$NAME=="North Korea",]$NAME<-"Dem. Rep. Korea"
worldmap@data[worldmap@data$NAME=="Czechia",]$NAME<-"Czech Rep."
worldmap@data[worldmap@data$NAME==unique(worldmap@data$NAME)[grep("Ivoi",unique(worldmap@data$NAME))],]$NAME<-"Cote d'Ivoire"
worldmap@data[worldmap@data$NAME=="Cabo Verde",]$NAME<-"Cape Verde"
worldmap@data[worldmap@data$NAME=="Trinidad and Tobago",]$NAME<-"Trinidad & Tobago"
worldmap@data[worldmap@data$NAME=="Eq. Guinea",]$NAME<-"Equatorial Guinea"
worldmap@data[worldmap@data$NAME=="Bosnia and Herz.",]$NAME<-"Bosnia"
worldmap@data[worldmap@data$NAME=="Antigua and Barb.",]$NAME<-"Antigua and Barbuda"
worldmap@data[worldmap@data$NAME=="Solomon Is.",]$NAME<-"Solomon Islands"
worldmap@data[worldmap@data$NAME==unique(worldmap@data$NAME)[grep("Tom",unique(worldmap@data$NAME))],]$NAME<-"Sao Tome"
worldmap@data[worldmap@data$NAME_EN=="People's Republic of China",]$NAME_EN<-"China"
worldmap@data[worldmap@data$NAME_EN=="Ivory Coast",]$NAME_EN<-"Cote d'Ivoire"
worldmap@data[worldmap@data$NAME_EN=="Democratic Republic of the Congo",]$NAME_EN<-"Congo, Dem. Rep."
worldmap@data[worldmap@data$NAME_EN=="Republic of the Congo",]$NAME_EN<-"Congo, Rep."
worldmap@data[worldmap@data$NAME_EN=="Cape Verde",]$NAME_EN<-"Cabo Verde"
worldmap@data[worldmap@data$NAME_EN=="Egypt",]$NAME_EN<-"Egypt, Arab Rep."
worldmap@data[worldmap@data$NAME_EN=="Iran",]$NAME_EN<-"Iran, Islamic Rep."
worldmap@data[worldmap@data$NAME_EN=="Federated States of Micronesia",]$NAME_EN<-"Micronesia, Fed. Sts."
worldmap@data[worldmap@data$NAME_EN=="The Gambia",]$NAME_EN<-"Gambia, The"
worldmap@data[worldmap@data$NAME_EN=="Kyrgyzstan",]$NAME_EN<-"Kyrgyz Republic"
worldmap@data[worldmap@data$NAME_EN=="Saint Kitts and Nevis",]$NAME_EN<-"St. Kitts and Nevis"
worldmap@data[worldmap@data$NAME_EN=="Laos",]$NAME_EN<-"Lao PDR"
worldmap@data[worldmap@data$NAME_EN=="Russia",]$NAME_EN<-"Russian Federation"
worldmap@data[worldmap@data$NAME_EN=="Venezuela",]$NAME_EN<-"Venezuela, RB"
worldmap@data[worldmap@data$NAME_EN=="Yemen",]$NAME_EN<-"Yemen, Rep."
worldmap@data[worldmap@data$NAME_EN=="Saint Lucia",]$NAME_EN<-"St. Lucia"
worldmap@data[worldmap@data$NAME_EN==unique(worldmap@data$NAME_EN)[grep("Tom", unique(worldmap@data$NAME_EN))],]$NAME_EN<-"Sao Tome and Principe"
worldmap@data[worldmap@data$NAME_EN=="East Timor",]$NAME_EN<-"Timor-Leste"
worldmap@data[worldmap@data$NAME_EN=="Syria",]$NAME_EN<-"Syrian Arab Republic"
worldmap@data[worldmap@data$NAME_EN=="The Bahamas",]$NAME_EN<-"Bahamas, The"
worldmap@data[worldmap@data$NAME_EN=="Hong Kong",]$NAME_EN<-"Hong Kong SAR, China"
worldmap@data[worldmap@data$NAME_EN=="North Korea",]$NAME_EN<-"Korea, Dem. People's Rep."
worldmap@data[worldmap@data$NAME_EN=="South Korea",]$NAME_EN<-"Korea, Rep."
worldmap@data[worldmap@data$NAME_EN=="Saint Vincent and the Grenadines",]$NAME_EN<-"St. Vincent and the Grenadines"
worldmap@data[worldmap@data$NAME_EN=="United States of America",]$NAME_EN<-"United States"
worldmap@data[worldmap@data$NAME_EN=="Sint Maarten",]$NAME_EN<-"Sint Maarten (Dutch Part)"
worldmap@data[worldmap@data$NAME_EN=="Saint Martin",]$NAME_EN<-"Saint Martin (French Part)"
worldmap@data[worldmap@data$NAME_EN=="Slovakia",]$NAME_EN<-"Slovak Republic"
worldmap@data[worldmap@data$NAME_EN=="United States Virgin Islands",]$NAME_EN<-"Virgin Islands (U.S.)"
getwd()
suppressPackageStartupMessages(library(shiny))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(rgdal))
suppressPackageStartupMessages(library(WDI))
library(leaflet)
worldmap = readOGR(dsn="Nat_world_map", layer="ne_50m_admin_0_countries")
worldmap@data[worldmap@data$NAME=="United States of America",]$NAME<-"United States"
worldmap@data[worldmap@data$NAME=="Congo",]$NAME<-"Rep. of Congo"
worldmap@data[worldmap@data$NAME=="South Korea",]$NAME<-"Korea"
worldmap@data[worldmap@data$NAME=="North Korea",]$NAME<-"Dem. Rep. Korea"
worldmap@data[worldmap@data$NAME=="Czechia",]$NAME<-"Czech Rep."
worldmap@data[worldmap@data$NAME==unique(worldmap@data$NAME)[grep("Ivoi",unique(worldmap@data$NAME))],]$NAME<-"Cote d'Ivoire"
worldmap@data[worldmap@data$NAME=="Cabo Verde",]$NAME<-"Cape Verde"
worldmap@data[worldmap@data$NAME=="Trinidad and Tobago",]$NAME<-"Trinidad & Tobago"
worldmap@data[worldmap@data$NAME=="Eq. Guinea",]$NAME<-"Equatorial Guinea"
worldmap@data[worldmap@data$NAME=="Bosnia and Herz.",]$NAME<-"Bosnia"
worldmap@data[worldmap@data$NAME=="Antigua and Barb.",]$NAME<-"Antigua and Barbuda"
worldmap@data[worldmap@data$NAME=="Solomon Is.",]$NAME<-"Solomon Islands"
worldmap@data[worldmap@data$NAME==unique(worldmap@data$NAME)[grep("Tom",unique(worldmap@data$NAME))],]$NAME<-"Sao Tome"
worldmap@data[worldmap@data$NAME_EN=="People's Republic of China",]$NAME_EN<-"China"
worldmap@data[worldmap@data$NAME_EN=="Ivory Coast",]$NAME_EN<-"Cote d'Ivoire"
worldmap@data[worldmap@data$NAME_EN=="Democratic Republic of the Congo",]$NAME_EN<-"Congo, Dem. Rep."
worldmap@data[worldmap@data$NAME_EN=="Republic of the Congo",]$NAME_EN<-"Congo, Rep."
worldmap@data[worldmap@data$NAME_EN=="Cape Verde",]$NAME_EN<-"Cabo Verde"
worldmap@data[worldmap@data$NAME_EN=="Egypt",]$NAME_EN<-"Egypt, Arab Rep."
worldmap@data[worldmap@data$NAME_EN=="Iran",]$NAME_EN<-"Iran, Islamic Rep."
worldmap@data[worldmap@data$NAME_EN=="Federated States of Micronesia",]$NAME_EN<-"Micronesia, Fed. Sts."
worldmap@data[worldmap@data$NAME_EN=="The Gambia",]$NAME_EN<-"Gambia, The"
worldmap@data[worldmap@data$NAME_EN=="Kyrgyzstan",]$NAME_EN<-"Kyrgyz Republic"
worldmap@data[worldmap@data$NAME_EN=="Saint Kitts and Nevis",]$NAME_EN<-"St. Kitts and Nevis"
worldmap@data[worldmap@data$NAME_EN=="Laos",]$NAME_EN<-"Lao PDR"
worldmap@data[worldmap@data$NAME_EN=="Russia",]$NAME_EN<-"Russian Federation"
worldmap@data[worldmap@data$NAME_EN=="Venezuela",]$NAME_EN<-"Venezuela, RB"
worldmap@data[worldmap@data$NAME_EN=="Yemen",]$NAME_EN<-"Yemen, Rep."
worldmap@data[worldmap@data$NAME_EN=="Saint Lucia",]$NAME_EN<-"St. Lucia"
worldmap@data[worldmap@data$NAME_EN==unique(worldmap@data$NAME_EN)[grep("Tom", unique(worldmap@data$NAME_EN))],]$NAME_EN<-"Sao Tome and Principe"
worldmap@data[worldmap@data$NAME_EN=="East Timor",]$NAME_EN<-"Timor-Leste"
worldmap@data[worldmap@data$NAME_EN=="Syria",]$NAME_EN<-"Syrian Arab Republic"
worldmap@data[worldmap@data$NAME_EN=="The Bahamas",]$NAME_EN<-"Bahamas, The"
worldmap@data[worldmap@data$NAME_EN=="Hong Kong",]$NAME_EN<-"Hong Kong SAR, China"
worldmap@data[worldmap@data$NAME_EN=="North Korea",]$NAME_EN<-"Korea, Dem. People's Rep."
worldmap@data[worldmap@data$NAME_EN=="South Korea",]$NAME_EN<-"Korea, Rep."
worldmap@data[worldmap@data$NAME_EN=="Saint Vincent and the Grenadines",]$NAME_EN<-"St. Vincent and the Grenadines"
worldmap@data[worldmap@data$NAME_EN=="United States of America",]$NAME_EN<-"United States"
worldmap@data[worldmap@data$NAME_EN=="Sint Maarten",]$NAME_EN<-"Sint Maarten (Dutch Part)"
worldmap@data[worldmap@data$NAME_EN=="Saint Martin",]$NAME_EN<-"Saint Martin (French Part)"
worldmap@data[worldmap@data$NAME_EN=="Slovakia",]$NAME_EN<-"Slovak Republic"
worldmap@data[worldmap@data$NAME_EN=="United States Virgin Islands",]$NAME_EN<-"Virgin Islands (U.S.)
""
"
worldmap@data[worldmap@data$NAME_EN=="United States Virgin Islands",]$NAME_EN<-"Virgin Islands (U.S.)"
worldmap@data[worldmap@data$NAME_EN=="Slovakia",]$NAME_EN<-"Slovak Republic"
chn_inv<-read.csv('China-Global-Investment-Tracker-2021-Fall-FINAL-2022.2.21-update.up.csv')
chn_inv<-chn_inv %>%
group_by(Year, Country) %>%
mutate(inv_tot = sum(as.numeric(gsub("[[:punct:]]", "", Quantity.in.Millions))))
chn_inv$Country<-stringr::str_to_lower(chn_inv$Country)
chn_inv[chn_inv$Country=="britain",]$Country<-"uk"
chn_inv[chn_inv$Country=="myanmar",]$Country<-"burma"
chn_inv[chn_inv$Country=="russian federation",]$Country<-"russia"
chn_inv[chn_inv$Country=="trinidad-tobago",]$Country<-"trinidad and tobago"
chn_inv[chn_inv$Country=="bosnia",]$Country<-"bosnia and herzegovina"
chn_inv[chn_inv$Country=="sao tome",]$Country<-"uk"
inv_y<-filter(chn_inv, Year==2015)
inv_y<-inv_y[!duplicated(inv_y$Country),c("Country","inv_tot")]
inv_y$inv_tot<-as.numeric(inv_y$inv_tot)
worldmap@data$sov_low<-stringr::str_to_lower(worldmap@data$SOVEREIGNT)
worldmap@data[worldmap@data$sov_low=="the bahamas",]$sov_low<-"bahamas"
worldmap@data[worldmap@data$sov_low=="united kingdom",]$sov_low<-"uk"
worldmap@data[worldmap@data$sov_low=="united states of america",]$sov_low<-"usa"
worldmap@data[worldmap@data$sov_low=="united arab emirates",]$sov_low<-"uae"
worldmap@data[worldmap@data$sov_low=="czechia",]$sov_low<-"czech republic"
worldmap@data[worldmap@data$sov_low=="east timor",]$sov_low<-"timor-leste"
worldmap@data[worldmap@data$sov_low=="united republic of tanzania",]$sov_low<-"tanzania"
worldmap@data<-left_join(worldmap@data, inv_y, by=c("sov_low"="Country"))
rawnodes<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_FREQ.csv')
rawedges<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_COOC.csv')
chn_inv<-read.csv('China-Global-Investment-Tracker-2021-Fall-FINAL-2022.2.21-update.up.csv')
chn_inv<-chn_inv %>%
group_by(Year, Country) %>%
mutate(inv_tot = sum(as.numeric(gsub("[[:punct:]]", "", Quantity.in.Millions))))
chn_inv$Country<-stringr::str_to_lower(chn_inv$Country)
chn_inv[chn_inv$Country=="britain",]$Country<-"uk"
chn_inv[chn_inv$Country=="myanmar",]$Country<-"burma"
chn_inv[chn_inv$Country=="russian federation",]$Country<-"russia"
chn_inv[chn_inv$Country=="trinidad-tobago",]$Country<-"trinidad and tobago"
chn_inv[chn_inv$Country=="bosnia",]$Country<-"bosnia and herzegovina"
chn_inv[chn_inv$Country=="sao tome",]$Country<-"uk"
net_dat<-filter(chn_inv, Year==min(chn_inv$Year))[!duplicated(filter(chn_inv, Year==min(chn_inv$Year))$Country), c("Country","Year","inv_tot")]
for(o in unique(chn_inv$Year)[-1]){
net_dat<-rbind(net_dat, filter(chn_inv, Year==o)[!duplicated(filter(chn_inv, Year==o)$Country), c("Country", "Year", "inv_tot")])
}
net_dat["Source"]<-rep("china",nrow(net_dat))
net_dat<-net_dat[c(4,1,2,3)]
colnames(net_dat)[2]<-"Target"
net_dat[net_dat$Target=="united arab emirates",]$Target<-"uae"
net_dat[net_dat$Target=="united states",]$Target<-"usa"
net_dat[net_dat$Target=="united kingdom",]$Target<-"uk"
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
h<-dplyr::rename(filter(net_dat,Year==2015)[c("Source", "Target", "inv_tot")], FROM=Source, TO=Target)
nodes<-filter(nodes, name %in% c(filter(net_dat, Year==2015)$Target,"china"))
nodes$id<-as.integer(rownames(nodes))
nodes<-nodes[c(4,2,3,1)]
u<-nodes[c(4,3,2)]
network_<-get.data.frame(graph.data.frame(filter(h, !TO%in%setdiff(h$TO, u$name)), directed=T, vertices=u), "both")
verts_<-network_$vertices
u<-nodes[c(4,3,2)]
suppressPackageStartupMessages(library(leaflet))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggthemes))
suppressPackageStartupMessages(library(network))
suppressPackageStartupMessages(library(maps))
suppressPackageStartupMessages(library(igraph))
View(u)
network_<-get.data.frame(graph.data.frame(filter(h, !TO%in%setdiff(h$TO, u$name)), directed=T, vertices=u), "both")
verts_<-network_$vertices
View(verts_)
coordinates(verts_)<-~lon+lat
verts_@data
View(verts_@data)
View(rawedges)
View(h)
setdiff(verts_@data$name, h$TO)
verts_@data<-left_join(verts_@data, h[c("TO", "inv_tot")], by=c("name"="TO"))
View(verts_@data)
verts_<-network_$vertices
coordinates(verts_)<-~lon+lat
View(verts_@data)
verts_@data<-left_join(verts_@data, h[c("TO", "inv_tot")], by=c("name"="TO"))
View(verts_@data)
?addCircles
runApp('Mappy_Appy2.R')
edges_1<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .2))
edges_2<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .4) & network_$edges[,3]>quantile(network_$edges[,3], .2))
edges_3<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .6) & network_$edges[,3]>quantile(network_$edges[,3], .4))
edges_4<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .8) & network_$edges[,3]>quantile(network_$edges[,3], .6))
edges_5<-filter(network_$edges, network_$edges[,3]>quantile(network_$edges[,3], .8))
edges_1<-lapply(1:nrow(edges_1),function(i){
as(rbind(verts_[verts_$name==edges_1[i, "from"],],
verts_[verts_$name==edges_1[i, "to"],]),
"SpatialLines")
})
edges_2<-lapply(1:nrow(edges_2),function(i){
as(rbind(verts_[verts_$name==edges_2[i, "from"],],
verts_[verts_$name==edges_2[i, "to"],]),
"SpatialLines")
})
edges_3<-lapply(1:nrow(edges_3),function(i){
as(rbind(verts_[verts_$name==edges_3[i, "from"],],
verts_[verts_$name==edges_3[i, "to"],]),
"SpatialLines")
})
edges_4<-lapply(1:nrow(edges_4),function(i){
as(rbind(verts_[verts_$name==edges_4[i, "from"],],
verts_[verts_$name==edges_4[i, "to"],]),
"SpatialLines")
})
edges_5<-lapply(1:nrow(edges_5),function(i){
as(rbind(verts_[verts_$name==edges_5[i, "from"],],
verts_[verts_$name==edges_5[i, "to"],]),
"SpatialLines")
})
for(i in seq_along(edges)){
edges_1[[i]]<-spChFIDs(edges_1[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_2[[i]]<-spChFIDs(edges_2[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_3[[i]]<-spChFIDs(edges_3[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_4[[i]]<-spChFIDs(edges_4[[i]], as.character(i))
}
for(i in seq_along(edges)){
edges_5[[i]]<-spChFIDs(edges_5[[i]], as.character(i))
}
edges_1<-do.call(rbind, edges_1)
edges_2<-do.call(rbind, edges_2)
edges_3<-do.call(rbind, edges_3)
edges_4<-do.call(rbind, edges_4)
edges_5<-do.call(rbind, edges_5)
View(worldmap@data)
leaflet()%>%
addPolygons(data=worldmap, weight=.5) %>%
addCircles(data=verts_, fillColor = "red", color="red")
leaflet()%>%
addPolygons(data=worldmap, weight=.5) %>%
addCircles(data=verts_, fillColor = "red", color="red", radius=~inv_tot)
verts_@data
verts_<-network_$vertices
verts_<-left_join(verts_, h[c("TO","inv_tot")], by=c("name"="TO"))
View(verts_)
leaflet()%>%
addPolygons(data=worldmap, weight = .5)%>%
addCircles(data=verts_, radius=~inv_tot, fillColor = "red", color = "red")
leaflet()%>%
addPolygons(data=worldmap, weight = .5)%>%
->p
p<-leaflet()%>%
addPolygons(data=worldmap, weight = .5)
p
p+addCircles(data=verts_)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red")
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=15)
addCircles(data=verts_, color = "red", fillColor = "red", radius=100)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=100)
addCircles(data=verts_, color = "red", fillColor = "red", radius=10000)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=10000)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=1000000000)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=1000000)
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot)
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*100)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*100)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*10)
p%>%
addCircles(data=verts_, color = "red", fillColor = "red", radius=~inv_tot*10, weight=2)
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy2.R')
runApp('Mappy_Appy3.R')
rawnodes<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_FREQ.csv')
rawedges<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_COOC.csv')
imf<-WDI(indicator = "DT.DOD.DIMF.CD", country="all",start=2005, extra=F)
imf<-filter(imf, !country %in% unique(imf$country)[1:49])
imf<-rename(imf, Year=year, name=country, IMF_cred=DT.DOD.DIMF.CD)
net_dat<-filter(imf, Year==min(imf$Year))[!duplicated(filter(imf, Year==min(imf$Year))$name), c("name","Year","IMF_cred")]
for(o in unique(imf$Year)[-1]){
net_dat<-rbind(net_dat, filter(imf, Year==o)[!duplicated(filter(imf, Year==o)$name), c("name", "Year", "IMF_cred")])
}
net_dat["Source"]<-rep("imf",nrow(net_dat))
net_dat<-net_dat[c(4,1,2,3)]
colnames(net_dat)[2]<-"Target"
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
net_dat$Target<-stringr::str_to_lower(net_dat$Target)
nodes<-rbind(nodes, c("imf", round(-77.04425201622206,6), round(38.89908346600995,6)))
nodes<-rbind(nodes, c("american samoa", round(-170.5794322853497,6), round(-14.26012915103479,6)))
nodes<-rbind(nodes, c("comoros", round(43.48504853332502,6),round(-11.862176383838756,6)))
nodes<-rbind(nodes,c("congo, rep.", round(16.052629791985225,6), round(-0.07691295959726356,6)))
nodes<-rbind(nodes,c("congo, dem. rep.", round(23.84214068136281,6), round(-3.2141630381290125,6)))
nodes<-rbind(nodes,c("cote d'ivoire", round(-5.529500409752393,6),round(7.253827157140813,6)))
nodes<-rbind(nodes,c("eswatini", round(31.526906430335316,6), round(-26.50532674658614, 6)))
nodes<-rbind(nodes,c("guinea-bissau", round(-15.11433094944025,6),round(11.849168222767416,6)))
nodes<-rbind(nodes, c("sao tome and principe", round(6.637044051405797,6), round(0.3877357338129725, 6)))
nodes<-rbind(nodes, c("st. lucia", round(-60.981555430152405,6), round(13.890030848573293,6)))
nodes<-rbind(nodes, c("st. vincent and the grenadines", round(-61.25999737205744,6), round(12.990774451382883,6)))
nodes<-rbind(nodes, c("timor-leste", round(126.04154797375384,6), round(-8.779762146492265,6)))
nodes<-rbind(nodes, c("st. kitts and nevis", round(-62.65150902029912, 6), round(17.2450959410363,6)))
nodes[nodes$name=="uk",]$name<-"united kingdom"
nodes[nodes$name=="uae",]$name<-"united arab emirates"
nodes[nodes$name=="brunei",]$name<-"brunei darussalam"
nodes[nodes$name=="macedonia",]$name<-"north macedonia"
nodes[nodes$name=="burma",]$name<-"myanmar"
nodes[nodes$name=="bahamas",]$name<-"bahamas, the"
nodes[nodes$name=="cape verde",]$name<-"cabo verde"
nodes[nodes$name=="egypt",]$name<-"egypt, arab rep."
nodes[nodes$name=="hong kong",]$name<-"hong kong sar, china"
nodes[nodes$name=="north korea",]$name<-"korea, dem. people's rep."
nodes[nodes$name=="south korea",]$name<-"korea, rep."
nodes[nodes$name=="kyrgyzstan",]$name<-"kyrgyz republic"
nodes[nodes$name=="laos",]$name<-"lao pdr"
nodes[nodes$name=="gambia",]$name<-"gambia, the"
nodes[nodes$name=="micronesia",]$name<-"micronesia, fed. sts."
nodes[nodes$name=="russia",]$name<-"russian federation"
nodes[nodes$name=="syria",]$name<-"syrian arab republic"
nodes[nodes$name=="venezuela",]$name<-"venezuela, rb"
nodes[nodes$name=="yemen",]$name<-"yemen, rep."
nodes[nodes$name=="usa",]$name<-"united states"
nodes[nodes$name=="iran",]$name<-"iran, islamic rep."
nodes[nodes$name=="slovakia",]$name<-"slovak republic"
nodes<-filter(nodes, name %in% c(filter(net_dat, Year==2015 & !is.na(IMF_cred))$Target,"imf"))
nodes$id<-as.integer(rownames(nodes))
nodes<-nodes[c(4,2,3,1)]
h<-dplyr::rename(filter(net_dat,Year==2015 & !is.na(IMF_cred))[c("Source", "Target", "IMF_cred")], FROM=Source, TO=Target)
u<-nodes[c("name", "lat","lon")]
u[u$name=="maldives",]$lat<-(4.222821)
u[u$name=="maldives",]$lon<-73.153334
network_<-get.data.frame(graph.data.frame(h, directed=T, vertices=u), "both")
verts_<-network_$vertices
View(verts_)
View(h)
setdiff(verts_$name, h$TO)
runApp('Mappy_Appy3.R')
leaflet()%>%
addPolygons(data=worldmap, weight=.5)->p
p
p %>%
addCircles(data=verts_)
typeof(verts_$lat)
verts_<-network_$vertices
verts_$lat<-as.numeric(verts_$lat)
verts_$lon<-as.numeric(verts_$lon)
verts_<-left_join(verts_, h["TO","IMF_cred"], by=c("name"="TO"))
View(verts_)
View(h)
verts_<-left_join(verts_, h[c("TO","IMF_cred")], by=c("name"="TO"))
View(verts_)
p %>%
addCircles(data=verts_)
addCircles(data=verts_, radius = ~IMF_cred)
p %>%
addCircles(data=verts_, radius = ~IMF_cred)
addCircles(data=verts_, radius = ~IMF_cred/100)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/100)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/100000)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/10000)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/100000)
p %>%
addCircles(data=verts_, radius = ~IMF_cred/10000)
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
library(vdemdata)
dem<-filter(vdem[c("country_name","country_text_id","year","v2x_libdem")],year>2004)
dem[dem$country_text_id=="XKX",]$country_text_id<-"KOS"
dem[dem$country_text_id=="SSD",]$country_text_id<-"SDS"
dem[dem$country_text_id=="PSE",]$country_text_id<-"PSX"
dem[dem$country_text_id=="SML",]$country_text_id<-"SOL"
View(dem)
summary(dem$v2x_libdem)
runApp('Mappy_Appy3.R')
?addLegend
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
summary(dem$v2x_libdem)
dem$dem_fac<-ifelse(dem$v2x_libdem<.15, 1, 0)
View(dem)
quantile(dem$v2x_libdem, seq(0,1,.2))
dem$dem_fac<-ifelse(dem$v2x_libdem<.1, 1, ifelse(dem$v2x_libdem<.25 & dem$v2x_libdem>.1, 2, 0))
dem$dem_fac<-ifelse(dem$v2x_libdem<=.1, 1, ifelse(dem$v2x_libdem<=.25 & dem$v2x_libdem>.1, 2,
ifelse(dem$v2x_libdem<=.45 & dem$v2x_libdem>.25, 3,0)))
dem$dem_fac<-ifelse(dem$v2x_libdem<=.1, 1, ifelse(dem$v2x_libdem<=.25 & dem$v2x_libdem>.1, 2,
ifelse(dem$v2x_libdem<=.5 & dem$v2x_libdem>.25, 3,
ifelse(dem$v2x_libdem<=.7 & dem$v2x_libdem>.5, 4,
ifelse(dem$v2x_libdem<=.9 & dem$v2x_libdem>.7, 5, 0)))))
runApp('Mappy_Appy3.R')
runApp('Mappy_Appy3.R')
