inv_y
}else if(input$which=="IMF"){
imf<-read.csv('WB_Data/5351a96d-1d86-4c24-875e-52732e298e43_Data.csv')[1:6727,c(1,3,5:8)]
colnames(imf)<-c("name", "year","IMF_Cred", "Net_Flows_con","Net_Flows_non","repurch_charg")
imf<-na_if(imf, "..")
# imf<-na_if(dplyr::rename(imf, name=ï..Country.Name, year=Time,
#                   IMF_cred=Use.of.IMF.credit..DOD..current.US....DT.DOD.DIMF.CD.,
#                   Net_Flows_con=Net.financial.flows..IMF.concessional..NFL..current.US....DT.NFL.IMFC.CD.,
#                   Net_Flows_non=Net.financial.flows..IMF.nonconcessional..NFL..current.US....DT.NFL.IMFN.CD.,
#                   repurch_charg=IMF.repurchases.and.charges..TDS..current.US....DT.TDS.DIMF.CD.), "..")
imf$IMF_cred<-as.numeric(imf$IMF_cred)
imf<-rename(imf, Year=year)
imf[imf$name=="Bahamas, The",]$name<-"Bahamas"
imf[imf$name=="Cabo Verde",]$name<-"Cape Verde"
#imf[imf$name=="China",]$name<-"People's Republic of China"
imf[imf$name=="Congo, Rep.",]$name<-"Republic of the Congo"
imf[imf$name=="Congo, Dem. Rep.",]$name<-"Democratic Republic of the Congo"
imf[imf$name=="Cote d'Ivoire",]$name<-"Ivory Coast"
imf[imf$name=="Egypt, Arab Rep.",]$name<-"Egypt"
#imf[imf$name=="Curacao",]$name<-"CuraÃ§ao"
imf[imf$name=="Gambia, The",]$name<-"Gambia"
imf[imf$name=="Hong Kong SAR, China",]$name<-"Hong Kong"
imf[imf$name=="Iran, Islamic Rep.",]$name<-"Iran"
imf[imf$name=="Korea, Rep.",]$name<-"South Korea"
imf[imf$name=="Korea, Dem. People's Rep.",]$name<-"North Korea"
imf[imf$name=="Kyrgyz Republic",]$name<-"Kyrgyzstan"
imf[imf$name=="Lao PDR",]$name<-"Laos"
imf[imf$name=="Russian Federation",]$name<-"Russia"
imf[imf$name=="Micronesia, Fed. Sts.",]$name<-"Micronesia"
imf[imf$name=="Syrian Arab Republic",]$name<-"Syria"
imf[imf$name=="Slovak Republic",]$name<-"Slovakia"
imf[imf$name=="Sint Maarten (Dutch part)",]$name<-"Sint Maarten"
imf[imf$name=="St. Martin (French part)",]$name<-"Saint Martin"
imf[imf$name=="St. Kitts and Nevis",]$name<-"Saint Kitts and Nevis"
imf[imf$name=="St. Lucia",]$name<-"Saint Lucia"
imf[imf$name=="St. Vincent and the Grenadines",]$name<-"Saint Vincent and the Grenadines"
imf[imf$name=="Timor-Leste",]$name<-"East Timor"
imf[imf$name=="United States",]$name<-"USA"
imf[imf$name=="Venezuela, RB",]$name<-"Venezuela"
imf[imf$name=="Virgin Islands (U.S.)",]$name<-"United States Virgin Islands"
imf[imf$name=="Yemen, Rep.",]$name<-"Yemen"
inv_y<-filter(imf, Year==year)[c("name","IMF_cred")]
inv_y
}
}) #These end the eventReactive that makes dat_
} #This one ends server
shinyApp(ui, server)
runApp('map_shiny.r')
shinyApp(ui, server)
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
library(shiny); runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
colnames(read.csv('WB_Data/5351a96d-1d86-4c24-875e-52732e298e43_Data.csv')[1:6727,c(1,3,5:8)])
runApp('Delete_later.R')
library(imfr)
?imfr
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
?na_if
runApp('Delete_later.R')
runApp('Delete_later.R')
colnames(read.csv('WB_Data/5351a96d-1d86-4c24-875e-52732e298e43_Data.csv')[1:6727,c(1,3,5:8)])
install.packages("WDI")
library(WDI)
colnames(read.csv('WB_Data/5351a96d-1d86-4c24-875e-52732e298e43_Data.csv')[1:6727,c(1,3,5:8)])
WDIsearch(string = "imf", field = "name", short = TRUE, cache = NULL)
WDI(indicator="DT.DOD.DIMF.CD")
head(WDI(indicator="DT.DOD.DIMF.CD"))
duck<-WDI(indicator="DT.DOD.DIMF.CD")
"Bahamas, The" %in% duck$country
"Cabo Verde" %in% duck$country
runApp('Delete_later.R')
runApp('Delete_later.R')
imf<-WDI(indicator = "DT.DOD.DIMF.CD")
imf<-rename(imf, Year=year)
imf[imf$name=="Bahamas, The",]$name<-"Bahamas"
imf[imf$name=="Cabo Verde",]$name<-"Cape Verde"
runApp('Delete_later.R')
runApp('Delete_later.R')
imf<-rename(imf, Year=year, name=country, IMF_cred=DT.DOD.DIMF.CD)
View(imf)
imf[imf$name=="Bahamas, The",]$name<-"Bahamas"
imf[imf$name=="Cabo Verde",]$name<-"Cape Verde"
#imf[imf$name=="China",]$name<-"People's Republic of China"
imf[imf$name=="Congo, Rep.",]$name<-"Republic of the Congo"
imf[imf$name=="Congo, Dem. Rep.",]$name<-"Democratic Republic of the Congo"
imf[imf$name=="Cote d'Ivoire",]$name<-"Ivory Coast"
imf[imf$name=="Egypt, Arab Rep.",]$name<-"Egypt"
imf[imf$name=="Gambia, The",]$name<-"Gambia"
imf[imf$name=="Hong Kong SAR, China",]$name<-"Hong Kong"
imf[imf$name=="Iran, Islamic Rep.",]$name<-"Iran"
imf[imf$name=="Korea, Rep.",]$name<-"South Korea"
imf[imf$name=="Korea, Dem. People's Rep.",]$name<-"North Korea"
imf[imf$name=="Kyrgyz Republic",]$name<-"Kyrgyzstan"
imf[imf$name=="Lao PDR",]$name<-"Laos"
imf[imf$name=="Russian Federation",]$name<-"Russia"
imf[imf$name=="Micronesia, Fed. Sts.",]$name<-"Micronesia"
imf[imf$name=="Syrian Arab Republic",]$name<-"Syria"
imf[imf$name=="Slovak Republic",]$name<-"Slovakia"
imf[imf$name=="Sint Maarten (Dutch part)",]$name<-"Sint Maarten"
imf[imf$name=="St. Martin (French part)",]$name<-"Saint Martin"
imf[imf$name=="St. Kitts and Nevis",]$name<-"Saint Kitts and Nevis"
imf[imf$name=="St. Lucia",]$name<-"Saint Lucia"
imf[imf$name=="St. Vincent and the Grenadines",]$name<-"Saint Vincent and the Grenadines"
imf[imf$name=="Timor-Leste",]$name<-"East Timor"
imf[imf$name=="United States",]$name<-"USA"
imf[imf$name=="Venezuela, RB",]$name<-"Venezuela"
imf[imf$name=="Virgin Islands (U.S.)",]$name<-"United States Virgin Islands"
imf[imf$name=="Yemen, Rep.",]$name<-"Yemen"
imf<-WDI(indicator = "DT.DOD.DIMF.CD")
imf<-rename(imf, Year=year, name=country, IMF_cred=DT.DOD.DIMF.CD)
imf[imf$name=="Bahamas, The",]$name<-"Bahamas"
imf[imf$name=="Cabo Verde",]$name<-"Cape Verde"
#imf[imf$name=="China",]$name<-"People's Republic of China"
imf[imf$name=="Congo, Rep.",]$name<-"Republic of the Congo"
imf[imf$name=="Congo, Dem. Rep.",]$name<-"Democratic Republic of the Congo"
imf[imf$name=="Cote d'Ivoire",]$name<-"Ivory Coast"
imf[imf$name=="Egypt, Arab Rep.",]$name<-"Egypt"
imf[imf$name=="Gambia, The",]$name<-"Gambia"
imf[imf$name=="Hong Kong SAR, China",]$name<-"Hong Kong"
imf[imf$name=="Iran, Islamic Rep.",]$name<-"Iran"
imf[imf$name=="Korea, Rep.",]$name<-"South Korea"
imf[imf$name=="Korea, Dem. People's Rep.",]$name<-"North Korea"
imf[imf$name=="Kyrgyz Republic",]$name<-"Kyrgyzstan"
imf[imf$name=="Lao PDR",]$name<-"Laos"
imf[imf$name=="Russian Federation",]$name<-"Russia"
imf[imf$name=="Micronesia, Fed. Sts.",]$name<-"Micronesia"
imf[imf$name=="Syrian Arab Republic",]$name<-"Syria"
imf[imf$name=="Slovak Republic",]$name<-"Slovakia"
imf[imf$name=="Sint Maarten (Dutch part)",]$name<-"Sint Maarten"
imf[imf$name=="St. Martin (French part)",]$name<-"Saint Martin"
imf[imf$name=="St. Kitts and Nevis",]$name<-"Saint Kitts and Nevis"
imf[imf$name=="St. Lucia",]$name<-"Saint Lucia"
imf[imf$name=="St. Vincent and the Grenadines",]$name<-"Saint Vincent and the Grenadines"
imf[imf$name=="Timor-Leste",]$name<-"East Timor"
imf[imf$name=="United States",]$name<-"USA"
imf[imf$name=="Venezuela, RB",]$name<-"Venezuela"
imf[imf$name=="Virgin Islands (U.S.)",]$name<-"United States Virgin Islands"
imf[imf$name=="Yemen, Rep.",]$name<-"Yemen"
runApp('Delete_later.R')
rm(imf)
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
worldmap = readOGR(dsn="Nat_world_map", layer="ne_50m_admin_0_countries")
worldmap@data[worldmap@data$NAME_EN=="The Bahamas",]$NAME_EN<-"Bahamas"
worldmap@data[worldmap@data$NAME_EN=="Brunei",]$NAME_EN<-"Brunei Darussalam"
worldmap@data[worldmap@data$NAME_EN=="People's Republic of China",]$NAME_EN<-"China"
worldmap@data[worldmap@data$NAME_EN=="The Gambia",]$NAME_EN<-"Gambia"
worldmap@data[worldmap@data$NAME_EN=="Federated States of Micronesia",]$NAME_EN<-"Micronesia"
worldmap@data[worldmap@data$NAME_EN=="United States of America",]$NAME_EN<-"USA"
worldmap@data[worldmap@data$NAME_EN=="CuraÃ§ao",]$NAME_EN<-"Curacao"
imf<-WDI(indicator = "DT.DOD.DIMF.CD")
imf<-rename(imf, Year=year, name=country, IMF_cred=DT.DOD.DIMF.CD)
imf[imf$name=="Bahamas, The",]$name<-"Bahamas"
imf[imf$name=="Cabo Verde",]$name<-"Cape Verde"
#imf[imf$name=="China",]$name<-"People's Republic of China"
imf[imf$name=="Congo, Rep.",]$name<-"Republic of the Congo"
imf[imf$name=="Congo, Dem. Rep.",]$name<-"Democratic Republic of the Congo"
imf[imf$name=="Cote d'Ivoire",]$name<-"Ivory Coast"
imf[imf$name=="Egypt, Arab Rep.",]$name<-"Egypt"
imf[imf$name=="Gambia, The",]$name<-"Gambia"
imf[imf$name=="Hong Kong SAR, China",]$name<-"Hong Kong"
imf[imf$name=="Iran, Islamic Rep.",]$name<-"Iran"
imf[imf$name=="Korea, Rep.",]$name<-"South Korea"
imf[imf$name=="Korea, Dem. People's Rep.",]$name<-"North Korea"
imf[imf$name=="Kyrgyz Republic",]$name<-"Kyrgyzstan"
imf[imf$name=="Lao PDR",]$name<-"Laos"
imf[imf$name=="Russian Federation",]$name<-"Russia"
imf[imf$name=="Micronesia, Fed. Sts.",]$name<-"Micronesia"
imf[imf$name=="Syrian Arab Republic",]$name<-"Syria"
imf[imf$name=="Slovak Republic",]$name<-"Slovakia"
imf[imf$name=="Sint Maarten (Dutch part)",]$name<-"Sint Maarten"
imf[imf$name=="St. Martin (French part)",]$name<-"Saint Martin"
imf[imf$name=="St. Kitts and Nevis",]$name<-"Saint Kitts and Nevis"
imf[imf$name=="St. Lucia",]$name<-"Saint Lucia"
imf[imf$name=="St. Vincent and the Grenadines",]$name<-"Saint Vincent and the Grenadines"
imf[imf$name=="Timor-Leste",]$name<-"East Timor"
imf[imf$name=="United States",]$name<-"USA"
imf[imf$name=="Venezuela, RB",]$name<-"Venezuela"
imf[imf$name=="Virgin Islands (U.S.)",]$name<-"United States Virgin Islands"
imf[imf$name=="Yemen, Rep.",]$name<-"Yemen"
inv_y<-filter(imf, Year==input$year)[c("name","IMF_cred")]
inv_y<-filter(imf, Year==2015)[c("name","IMF_cred")]
left_join(worldmap@data, dat_(), by=c("NAME_EN"="name"))
runApp('Delete_later.R')
runApp('Delete_later.R')
imf<-WDI(indicator = "DT.DOD.DIMF.CD")
?WDI()
imf<-WDI(indicator = "DT.DOD.DIMF.CD", start=2005, extra=F)
runApp('Delete_later.R')
runApp('Delete_later.R')
View(worldmap@data)
length(unique(worldmap@data$POSTAL))
runApp('Delete_later.R')
runApp('Delete_later.R')
library(shiny); runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
library(shiny); runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Maps with Shiny.R')
runApp('Maps with Shiny.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
runApp('Delete_later.R')
knitr::opts_chunk$set(echo = TRUE)
worldmap = readOGR(dsn= "Nat_world_map", layer="ne_50m_admin_0_countries")
worldmap@data[worldmap@data$NAME=="United States of America",]$NAME<-"United States"
worldmap@data[worldmap@data$NAME=="Congo",]$NAME<-"Rep. of Congo"
worldmap@data[worldmap@data$NAME=="South Korea",]$NAME<-"Korea"
worldmap@data[worldmap@data$NAME=="North Korea",]$NAME<-"Dem. Rep. Korea"
worldmap@data[worldmap@data$NAME=="Czechia",]$NAME<-"Czech Rep."
worldmap@data[worldmap@data$NAME=="CÃ´te d'Ivoire",]$NAME<-"Cote d'Ivoire"
worldmap@data[worldmap@data$NAME=="Cabo Verde",]$NAME<-"Cape Verde"
worldmap@data[worldmap@data$NAME=="Trinidad and Tobago",]$NAME<-"Trinidad & Tobago"
worldmap@data[worldmap@data$NAME=="Eq. Guinea",]$NAME<-"Equatorial Guinea"
worldmap@data[worldmap@data$NAME=="Bosnia and Herz.",]$NAME<-"Bosnia"
worldmap@data[worldmap@data$NAME=="Antigua and Barb.",]$NAME<-"Antigua and Barbuda"
worldmap@data[worldmap@data$NAME=="Solomon Is.",]$NAME<-"Solomon Islands"
worldmap@data[worldmap@data$NAME=="SÃ£o TomÃ© and Principe",]$NAME<-"Sao Tome"
worldmap@data[worldmap@data$NAME_EN=="The Bahamas",]$NAME_EN<-"Bahamas"
worldmap@data[worldmap@data$NAME_EN=="Brunei",]$NAME_EN<-"Brunei Darussalam"
worldmap@data[worldmap@data$NAME_EN=="People's Republic of China",]$NAME_EN<-"China"
worldmap@data[worldmap@data$NAME_EN=="The Gambia",]$NAME_EN<-"Gambia"
worldmap@data[worldmap@data$NAME_EN=="Federated States of Micronesia",]$NAME_EN<-"Micronesia"
worldmap@data[worldmap@data$NAME_EN=="United States of America",]$NAME_EN<-"USA"
worldmap@data[worldmap@data$NAME_EN=="CuraÃ§ao",]$NAME_EN<-"Curacao"
imf<-na_if(rename(read.csv('WB_Data/5351a96d-1d86-4c24-875e-52732e298e43_Data.csv'),name=ï..Country.Name, year=Time, IMF_cred=Use.of.IMF.credit..DOD..current.US....DT.DOD.DIMF.CD., Net_Flows_con=Net.financial.flows..IMF.concessional..NFL..current.US....DT.NFL.IMFC.CD., Net_Flows_non=Net.financial.flows..IMF.nonconcessional..NFL..current.US....DT.NFL.IMFN.CD., repurch_charg=IMF.repurchases.and.charges..TDS..current.US....DT.TDS.DIMF.CD.)[1:6727,c(1,3,5:8)], "..")
imf$IMF_cred<-as.numeric(imf$IMF_cred)
imf<-rename(imf, Year=year)
imf[imf$name=="Bahamas, The",]$name<-"Bahamas"
imf[imf$name=="Cabo Verde",]$name<-"Cape Verde"
#imf[imf$name=="China",]$name<-"People's Republic of China"
imf[imf$name=="Congo, Rep.",]$name<-"Republic of the Congo"
imf[imf$name=="Congo, Dem. Rep.",]$name<-"Democratic Republic of the Congo"
imf[imf$name=="Cote d'Ivoire",]$name<-"Ivory Coast"
imf[imf$name=="Egypt, Arab Rep.",]$name<-"Egypt"
#imf[imf$name=="Curacao",]$name<-"CuraÃ§ao"
imf[imf$name=="Gambia, The",]$name<-"Gambia"
imf[imf$name=="Hong Kong SAR, China",]$name<-"Hong Kong"
imf[imf$name=="Iran, Islamic Rep.",]$name<-"Iran"
imf[imf$name=="Korea, Rep.",]$name<-"South Korea"
imf[imf$name=="Korea, Dem. People's Rep.",]$name<-"North Korea"
imf[imf$name=="Kyrgyz Republic",]$name<-"Kyrgyzstan"
imf[imf$name=="Lao PDR",]$name<-"Laos"
imf[imf$name=="Russian Federation",]$name<-"Russia"
imf[imf$name=="Micronesia, Fed. Sts.",]$name<-"Micronesia"
imf[imf$name=="Syrian Arab Republic",]$name<-"Syria"
imf[imf$name=="Slovak Republic",]$name<-"Slovakia"
imf[imf$name=="Sint Maarten (Dutch part)",]$name<-"Sint Maarten"
imf[imf$name=="St. Martin (French part)",]$name<-"Saint Martin"
imf[imf$name=="St. Kitts and Nevis",]$name<-"Saint Kitts and Nevis"
imf[imf$name=="St. Lucia",]$name<-"Saint Lucia"
imf[imf$name=="St. Vincent and the Grenadines",]$name<-"Saint Vincent and the Grenadines"
imf[imf$name=="Timor-Leste",]$name<-"East Timor"
imf[imf$name=="United States",]$name<-"USA"
imf[imf$name=="Venezuela, RB",]$name<-"Venezuela"
imf[imf$name=="Virgin Islands (U.S.)",]$name<-"United States Virgin Islands"
imf[imf$name=="Yemen, Rep.",]$name<-"Yemen"
imf_y<-filter(imf, Year==year)[c("name","IMF_cred")]
year=2015
imf_y<-filter(imf, Year==year)[c("name","IMF_cred")]
worldmap@data<-left_join(worldmap@data, imf_y, by=c("NAME_EN"="name"))
pop_cont<-paste0("Country: ", worldmap@data$SOVEREIGNT, "<br>",
"IMF Investment (In Millions: $", round(worldmap@data$IMF_cred/1000000, 0))
pal<-colorNumeric(palette="Blues", domain=worldmap@data$IMF_cred)
if(net==F){
leaflet(data=worldmap)%>%
setView(lat=40, lng=0, zoom=1.5)%>%
addPolygons(weight=.5, color=~pal(IMF_cred), fillOpacity = .75, popup=pop_cont, highlightOptions = highlightOptions(color="white", weight=2, bringToFront = T, sendToBack = T), label=worldmap@data$SOVEREIGNT) %>%
addEasyButton(easyButton(icon="fa-globe",title="Home",onClick=JS("function(btn, map){ map.setZoom(1.4); }")))
}else if(net==T){
net_dat<-filter(imf, Year==min(imf$Year))[!duplicated(filter(imf, Year==min(imf$Year))$name), c("name","Year","IMF_cred")]
for(o in unique(imf$Year)[-1]){
net_dat<-rbind(net_dat, filter(imf, Year==o)[!duplicated(filter(imf, Year==o)$name), c("name", "Year", "IMF_cred")])
}
net_dat["Source"]<-rep("imf",nrow(net_dat))
net_dat<-net_dat[c(4,1,2,3)]
colnames(net_dat)[2]<-"Target"
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
net_dat$Target<-stringr::str_to_lower(net_dat$Target)
nodes<-rbind(nodes, c("imf", round(-77.04425201622206,6), round(38.89908346600995,6)))
nodes<-rbind(nodes, c("American Samoa", round(-170.5794322853497,6), round(-14.26012915103479,6)))
nodes<-rbind(nodes, c("comoros", round(43.48504853332502,6),round(-11.862176383838756,6)))
nodes<-rbind(nodes,c("republic of the congo", round(16.052629791985225,6), round(-0.07691295959726356,6)))
nodes<-rbind(nodes,c("democratic republic of the congo", round(23.84214068136281,6), round(-3.2141630381290125,6)))
nodes<-rbind(nodes,c("ivory coast", round(-5.529500409752393,6),round(7.253827157140813,6)))
nodes<-rbind(nodes,c("eswatini", round(31.526906430335316,6), round(-26.50532674658614, 6)))
nodes<-rbind(nodes,c("guinea-bissau", round(-15.11433094944025,6),round(11.849168222767416,6)))
nodes<-rbind(nodes, c("sao tome and principe", round(6.637044051405797,6), round(0.3877357338129725, 6)))
nodes<-rbind(nodes, c("saint lucia", round(-60.981555430152405,6), round(13.890030848573293,6)))
nodes<-rbind(nodes, c("saint vincent and the grenadines", round(-61.25999737205744,6), round(12.990774451382883,6)))
nodes[nodes$name=="uk",]$name<-"united kingdom"
nodes[nodes$name=="uae",]$name<-"united arab emirates"
nodes[nodes$name=="brunei",]$name<-"brunei darussalam"
nodes[nodes$name=="macedonia",]$name<-"north macedonia"
nodes[nodes$name=="burma",]$name<-"myanmar"
nodes<-filter(nodes, name %in% c(filter(net_dat, Year==year & !is.na(IMF_cred))$Target,"imf"))
nodes$id<-as.integer(rownames(nodes))
nodes<-nodes[c(4,2,3,1)]
h<-dplyr::rename(filter(net_dat,Year==year & !is.na(IMF_cred))[c("Source", "Target", "IMF_cred")], FROM=Source, TO=Target)
u<-nodes[c(4,3,2)]
network_<-get.data.frame(graph.data.frame(h, directed=T, vertices=u), "both")
verts_<-network_$vertices
verts_$lat<-as.numeric(verts_$lat)
verts_$lon<-as.numeric(verts_$lon)
coordinates(verts_)<-~lon+lat
edges_<-network_$edges
edges_<-lapply(1:nrow(edges_),function(i){
as(rbind(verts_[verts_$name==edges_[i, "from"],],
verts_[verts_$name==edges_[i, "to"],]),
"SpatialLines")
})
for(i in seq_along(edges)){
edges_[[i]]<-spChFIDs(edges_[[i]], as.character(i))
}
edges_<-do.call(rbind, edges_)
rm(year)
edges_
}
net_dat<-filter(imf, Year==min(imf$Year))[!duplicated(filter(imf, Year==min(imf$Year))$name), c("name","Year","IMF_cred")]
for(o in unique(imf$Year)[-1]){
net_dat<-rbind(net_dat, filter(imf, Year==o)[!duplicated(filter(imf, Year==o)$name), c("name", "Year", "IMF_cred")])
}
net_dat["Source"]<-rep("imf",nrow(net_dat))
net_dat<-net_dat[c(4,1,2,3)]
colnames(net_dat)[2]<-"Target"
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
rawnodes<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_FREQ.csv')
rawedges<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_COOC.csv')
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
h<-dplyr::rename(filter(net_dat,Year==year)[c("Source", "Target", "inv_tot")], FROM=Source, TO=Target)
year<-2015
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
View(net_dat)
net_dat<-filter(imf, Year==min(imf$Year))[!duplicated(filter(imf, Year==min(imf$Year))$name), c("name","Year","IMF_cred")]
for(o in unique(imf$Year)[-1]){
net_dat<-rbind(net_dat, filter(imf, Year==o)[!duplicated(filter(imf, Year==o)$name), c("name", "Year", "IMF_cred")])
}
net_dat["Source"]<-rep("imf",nrow(net_dat))
net_dat<-net_dat[c(4,1,2,3)]
colnames(net_dat)[2]<-"Target"
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
net_dat$Target<-stringr::str_to_lower(net_dat$Target)
nodes<-rbind(nodes, c("imf", round(-77.04425201622206,6), round(38.89908346600995,6)))
nodes<-rbind(nodes, c("American Samoa", round(-170.5794322853497,6), round(-14.26012915103479,6)))
nodes<-rbind(nodes, c("comoros", round(43.48504853332502,6),round(-11.862176383838756,6)))
nodes<-rbind(nodes,c("republic of the congo", round(16.052629791985225,6), round(-0.07691295959726356,6)))
nodes<-rbind(nodes,c("democratic republic of the congo", round(23.84214068136281,6), round(-3.2141630381290125,6)))
nodes<-rbind(nodes,c("ivory coast", round(-5.529500409752393,6),round(7.253827157140813,6)))
nodes<-rbind(nodes,c("eswatini", round(31.526906430335316,6), round(-26.50532674658614, 6)))
nodes<-rbind(nodes,c("guinea-bissau", round(-15.11433094944025,6),round(11.849168222767416,6)))
nodes<-rbind(nodes, c("sao tome and principe", round(6.637044051405797,6), round(0.3877357338129725, 6)))
nodes<-rbind(nodes, c("saint lucia", round(-60.981555430152405,6), round(13.890030848573293,6)))
nodes<-rbind(nodes, c("saint vincent and the grenadines", round(-61.25999737205744,6), round(12.990774451382883,6)))
nodes[nodes$name=="uk",]$name<-"united kingdom"
nodes[nodes$name=="uae",]$name<-"united arab emirates"
nodes[nodes$name=="brunei",]$name<-"brunei darussalam"
nodes[nodes$name=="macedonia",]$name<-"north macedonia"
nodes[nodes$name=="burma",]$name<-"myanmar"
nodes<-filter(nodes, name %in% c(filter(net_dat, Year==year & !is.na(IMF_cred))$Target,"imf"))
nodes$id<-as.integer(rownames(nodes))
nodes<-nodes[c(4,2,3,1)]
h<-dplyr::rename(filter(net_dat,Year==year & !is.na(IMF_cred))[c("Source", "Target", "IMF_cred")], FROM=Source, TO=Target)
u<-nodes[c(4,3,2)]
network_<-get.data.frame(graph.data.frame(h, directed=T, vertices=u), "both")
verts_<-network_$vertices
verts_$lat<-as.numeric(verts_$lat)
verts_$lon<-as.numeric(verts_$lon)
coordinates(verts_)<-~lon+lat
edges_<-network_$edges
edges_<-lapply(1:nrow(edges_),function(i){
as(rbind(verts_[verts_$name==edges_[i, "from"],],
verts_[verts_$name==edges_[i, "to"],]),
"SpatialLines")
})
for(i in seq_along(edges)){
edges_[[i]]<-spChFIDs(edges_[[i]], as.character(i))
}
edges_<-do.call(rbind, edges_)
network_$edges
View(network_$edges)
edges_<-network_$edges
edges_<-lapply(1:nrow(edges_),function(i){
as(rbind(verts_[verts_$name==edges_[i, "from"],],
verts_[verts_$name==edges_[i, "to"],]),
"SpatialLines")
})
for(i in seq_along(edges)){
edges_[[i]]<-spChFIDs(edges_[[i]], as.character(i))
}
summary(network_$edges$IMF_cred)
edges_data<-network_$edges
View(edges_data)
quantile(edges_data$IMF_cred, .25)
quantile(edges_data$IMF_cred, c(.25,.5,.75,1)
)
quantile(edges_data$IMF_cred, seq(.2,1,.2))
network_$edges
edges_1<-filter(network_$edges, network_$edges[3]<=quantile(network_$edges[3],.2))
66/123
View(edges_1)
quantile(edges_data$IMF_cred, seq(.2,1,.2))
max(edges_1$IMF_cred)
quantile(network_$edges[3],.2)
network_$edges[3]
c(network_$edges[3])
quantile(c(network_$edges[3]),.2)
c(network_$edges[3])
typeof(c(network_$edges[3]))
typeof(c(network_$edges[3])[1])
c(network_$edges[3])[1]
View(network_$edges)
View(network_$edges[3]
)
typeof(network_$edges$IMF_cred)
typeof(network_$edges[3])
as.double(network_$edges[3])
typeof(network_$edges[3,])
typeof(network_$edges[,3])
quantile(network_$edges[,3],.2)
quantile(network_$edges$IMF_cred, c(.2,.4,.6,.8,1))
edges_1<-filter(network_$edges, network_$edges[,3]<=quantile(network_$edges[,3], .2))
25/123
seq_along(edges)
seq_along(edges_)
runApp('Delete_later.R')
?addPolylines
runApp('Delete_later.R')
runApp('Delete_later.R')
rm(list=ls())
worldmap = readOGR(dsn= "Nat_world_map", layer="ne_50m_admin_0_countries")
worldmap@data[worldmap@data$NAME=="United States of America",]$NAME<-"United States"
worldmap@data[worldmap@data$NAME=="Congo",]$NAME<-"Rep. of Congo"
worldmap@data[worldmap@data$NAME=="South Korea",]$NAME<-"Korea"
worldmap@data[worldmap@data$NAME=="North Korea",]$NAME<-"Dem. Rep. Korea"
worldmap@data[worldmap@data$NAME=="Czechia",]$NAME<-"Czech Rep."
worldmap@data[worldmap@data$NAME=="CÃ´te d'Ivoire",]$NAME<-"Cote d'Ivoire"
worldmap@data[worldmap@data$NAME=="Cabo Verde",]$NAME<-"Cape Verde"
worldmap@data[worldmap@data$NAME=="Trinidad and Tobago",]$NAME<-"Trinidad & Tobago"
worldmap@data[worldmap@data$NAME=="Eq. Guinea",]$NAME<-"Equatorial Guinea"
worldmap@data[worldmap@data$NAME=="Bosnia and Herz.",]$NAME<-"Bosnia"
worldmap@data[worldmap@data$NAME=="Antigua and Barb.",]$NAME<-"Antigua and Barbuda"
worldmap@data[worldmap@data$NAME=="Solomon Is.",]$NAME<-"Solomon Islands"
worldmap@data[worldmap@data$NAME=="SÃ£o TomÃ© and Principe",]$NAME<-"Sao Tome"
rawnodes<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_FREQ.csv')
rawedges<-read.csv('http://www.kateto.net/wordpress/wp-content/uploads/2015/06/Country_terms_COOC.csv')
chn_inv<-read.csv('China-Global-Investment-Tracker-2021-Fall-FINAL-2022.2.21-update.up.csv')
chn_inv<-chn_inv %>%
group_by(Year, Country) %>%
mutate(inv_tot = sum(as.numeric(gsub("[[:punct:]]", "", Quantity.in.Millions))))
chn_inv$Country<-stringr::str_to_lower(chn_inv$Country)
chn_inv[chn_inv$Country=="britain",]$Country<-"uk"
chn_inv[chn_inv$Country=="myanmar",]$Country<-"burma"
chn_inv[chn_inv$Country=="russian federation",]$Country<-"russia"
chn_inv[chn_inv$Country=="trinidad-tobago",]$Country<-"trinidad and tobago"
chn_inv[chn_inv$Country=="bosnia",]$Country<-"bosnia and herzegovina"
chn_inv[chn_inv$Country=="sao tome",]$Country<-"uk"
inv_y<-filter(chn_inv, Year==year)
year<-2015
inv_y<-filter(chn_inv, Year==year)
inv_y<-inv_y[!duplicated(inv_y$Country),c("Country","inv_tot")]
inv_y$inv_tot<-as.numeric(inv_y$inv_tot)
worldmap@data$sov_low<-stringr::str_to_lower(worldmap@data$SOVEREIGNT)
worldmap@data[worldmap@data$sov_low=="the bahamas",]$sov_low<-"bahamas"
worldmap@data[worldmap@data$sov_low=="united kingdom",]$sov_low<-"uk"
worldmap@data[worldmap@data$sov_low=="united states of america",]$sov_low<-"usa"
worldmap@data[worldmap@data$sov_low=="united arab emirates",]$sov_low<-"uae"
worldmap@data[worldmap@data$sov_low=="czechia",]$sov_low<-"czech republic"
worldmap@data[worldmap@data$sov_low=="east timor",]$sov_low<-"timor-leste"
worldmap@data[worldmap@data$sov_low=="united republic of tanzania",]$sov_low<-"tanzania"
worldmap@data<-left_join(worldmap@data, inv_y, by=c("sov_low"="Country"))
net_dat<-filter(chn_inv, Year==min(chn_inv$Year))[!duplicated(filter(chn_inv, Year==min(chn_inv$Year))$Country), c("Country","Year","inv_tot")]
for(o in unique(chn_inv$Year)[-1]){
net_dat<-rbind(net_dat, filter(chn_inv, Year==o)[!duplicated(filter(chn_inv, Year==o)$Country), c("Country", "Year", "inv_tot")])
}
net_dat["Source"]<-rep("china",nrow(net_dat))
net_dat<-net_dat[c(4,1,2,3)]
colnames(net_dat)[2]<-"Target"
net_dat[net_dat$Target=="united arab emirates",]$Target<-"uae"
net_dat[net_dat$Target=="united states",]$Target<-"usa"
net_dat[net_dat$Target=="united kingdom",]$Target<-"uk"
nodes<-rename(rawnodes[c("ID","lon","lat")],name=ID)
h<-dplyr::rename(filter(net_dat,Year==year)[c("Source", "Target", "inv_tot")], FROM=Source, TO=Target)
nodes<-filter(nodes, name %in% c(filter(net_dat, Year==year)$Target,"china"))
nodes$id<-as.integer(rownames(nodes))
nodes<-nodes[c(4,2,3,1)]
u<-nodes[c(4,3,2)]
network_<-get.data.frame(graph.data.frame(filter(h, !TO%in%setdiff(h$TO, u$name)), directed=T, vertices=u), "both")
verts_<-network_$vertices
coordinates(verts_)<-~lon+lat
View(network_$edges)
runApp('Delete_later.R')
runApp('Delete_later.R')
rm(list=ls())
library(shiny); runApp('Mappy_Appy.R')
runApp('Mappy_Appy.R')
runApp('Mappy_Appy.R')
runApp('Mappy_Appy.R')
